fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(merged[merged$CityName == "Los Angeles"][!is.na(diabetes_percentage)], aes(x=CityName, y=diabetes_percentage, color=CityName)) +
geom_boxplot()
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
merged_Geo <- merged %>%
mutate(GeoLocation = str_sub(GeoLocation, 2,-2)) %>%
separate(GeoLocation, into = c('lat', 'lon'), sep = ',')
merged_Geo <- as.data.table(merged_Geo)
head(merged_Geo)
merged_Geo$lat <- as.double(merged_Geo$lat)
merged_Geo$lon <- as.double(merged_Geo$lon)
str(merged_Geo)
pal <- colorNumeric(c('darkgreen','goldenrod','darkred'), domain=merged_Geo$diabetes_percentage)
pal
pal <- colorNumeric(c('darkgreen','goldenrod','darkred'), domain=merged_Geo$diabetes_percentage)
pal
#label, color
leaflet() %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(data = merged_Geo[CityName == "Los Angeles"],
lat=~lat,lng=~lon,
label = ~paste0(round(`diabetes_%`,2)), color = ~ pal(diabetes_percentage),
opacity = 0.5, fillOpacity = 1, radius = 50) %>%
# And a pretty legend
addLegend('bottomleft', pal=pal, values=merged_Geo$diabetes_percentage,
title='diabetes%', opacity=1)
#label, color
leaflet() %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(data = merged_Geo[CityName == "Los Angeles"],
lat=~lat,lng=~lon,
label = ~paste0(round(diabetes_percentage,2)), color = ~ pal(diabetes_percentage),
opacity = 0.5, fillOpacity = 1, radius = 50) %>%
# And a pretty legend
addLegend('bottomleft', pal=pal, values=merged_Geo$diabetes_percentage,
title='diabetes%', opacity=1)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(tidyverse)
library(leaflet)
library(data.table)
library(dtplyr)
library(dplyr)
library(ggplot2)
library(stringr)
setwd("/Users/samuellu/Desktop/PM566/GitHub/pm566-fall2022-labs_Sam/mid_term/")
install.packages("RSocrata")
library("RSocrata")
dia <- read.socrata(
"https://chronicdata.cdc.gov/resource/cn78-b9bj.json",
app_token = "bEkVW73ASzmTkZ9riAtf2YS5c",
email     = "clu74108@usc.edu",
password  = "Samuelsunny0325!"
)
View(dia)
install.packages("RSocrata")
library("RSocrata")
dia <- read.socrata(
"https://chronicdata.cdc.gov/resource/cn78-b9bj.json?year=2017",
app_token = "bEkVW73ASzmTkZ9riAtf2YS5c",
email     = "clu74108@usc.edu",
password  = "Samuelsunny0325!"
)
install.packages("RSocrata")
View(dia)
#install.packages("RSocrata")
library("RSocrata")
dia <- read.socrata(
"https://chronicdata.cdc.gov/resource/cn78-b9bj.json?year=2017",
app_token = "bEkVW73ASzmTkZ9riAtf2YS5c",
email     = "clu74108@usc.edu",
password  = "Samuelsunny0325!"
)
obe <- read.socrata(
"https://chronicdata.cdc.gov/resource/bjvu-3y7d.json?year=2017",
app_token = "bEkVW73ASzmTkZ9riAtf2YS5c",
email     = "clu74108@usc.edu",
password  = "Samuelsunny0325!"
)
View(obe)
dim(dia)
dim(obe)
dia_mini <- dia[, c(2, 3, 14, 17, 19, 20, 23)]
obe_mini <- obe[, c(2, 3, 14, 17, 19, 20, 23)]
View(dia_mini)
dim(dia_mini)
dim(obe_mini)
str(dia_mini)
str(obe_mini)
str(dia_mini)
str(obe_mini)
colnames(dia_mini)[1] <- "diabetes_percentage"
colnames(dia_mini)[2] <- "dia_PopulationCount"
colnames(dia_mini)[3] <- "state"
colnames(dia_mini)[6] <- "lat"
colnames(dia_mini)[7] <- "lon"
colnames(obe_mini)[1] <- "obesity_percentage"
colnames(obe_mini)[2] <- "obe_PopulationCount"
colnames(obe_mini)[3] <- "state"
colnames(obe_mini)[6] <- "lat"
colnames(obe_mini)[7] <- "lon"
View(obe_mini)
merged <-
merge(
# Data
x     = dia_mini,
y     = obe_mini,
# List of variables to match
by = c("state", "statedesc", "cityname", "lat", "lon"),
# keep everything!
all.x = TRUE
)
View(merged)
merged[, n := 1:.N, by = .(state, statedesc, cityname, lat, lon)]
dia <- as.data.table(dia)
obe <- as.data.table(obe)
dim(dia)
dim(obe)
dia_mini <- dia[, c(2, 3, 14, 17, 19, 20, 23)]
obe_mini <- obe[, c(2, 3, 14, 17, 19, 20, 23)]
dim(dia_mini)
dim(obe_mini)
str(dia_mini)
str(obe_mini)
colnames(dia_mini)[1] <- "diabetes_percentage"
colnames(dia_mini)[2] <- "dia_PopulationCount"
colnames(dia_mini)[3] <- "state"
colnames(dia_mini)[6] <- "lat"
colnames(dia_mini)[7] <- "lon"
colnames(obe_mini)[1] <- "obesity_percentage"
colnames(obe_mini)[2] <- "obe_PopulationCount"
colnames(obe_mini)[3] <- "state"
colnames(obe_mini)[6] <- "lat"
colnames(obe_mini)[7] <- "lon"
merged <-
merge(
# Data
x     = dia_mini,
y     = obe_mini,
# List of variables to match
by = c("state", "statedesc", "cityname", "lat", "lon"),
# keep everything!
all.x = TRUE
)
merged[, n := 1:.N, by = .(state, statedesc, cityname, lat, lon)]
merged <- merged[n == 1,][, n := NULL]
length(unique(merged$GeoLocation))
length(unique(merged$lat))
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
merged$diabetes_percentage <- as.numeric(merged$diabetes_percentage)
str(merged)
merged$obesity_percentage <- as.numeric(merged$obesity_percentage)
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
mean(is.na(merged$diabetes_percentage))
mean(is.na(merged$obesity_percentage))
merged[, diabetes_percentage := fcoalesce(diabetes_percentage, mean(diabetes_percentage, na.rm = TRUE))]
merged[, obesity_percentage := fcoalesce(obesity_percentage, mean(obesity_percentage, na.rm = TRUE))]
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
merged[, .(
diabetes_min = min(diabetes_percentage, na.rm = T),
diabetes_max = max(diabetes_percentage, na.rm = T),
diabetes_length = length(diabetes_percentage),
obesity_min = min(obesity_percentage, na.rm = T),
obesity_max = max(obesity_percentage, na.rm = T),
obesity_length = length(obesity_percentage)
), by="CityName"]
merged[, .(
diabetes_min = min(diabetes_percentage, na.rm = T),
diabetes_max = max(diabetes_percentage, na.rm = T),
diabetes_length = length(diabetes_percentage),
obesity_min = min(obesity_percentage, na.rm = T),
obesity_max = max(obesity_percentage, na.rm = T),
obesity_length = length(obesity_percentage)
), by="state"]
merged[, .(
diabetes_min = min(diabetes_percentage, na.rm = T),
diabetes_max = max(diabetes_percentage, na.rm = T),
diabetes_length = length(diabetes_percentage),
obesity_min = min(obesity_percentage, na.rm = T),
obesity_max = max(obesity_percentage, na.rm = T),
obesity_length = length(obesity_percentage)
), by="cityname"]
dim(merged)
#head(merged)
#tail(merged)
str(merged)
merged$lat <- as.numeric(merged$lat)
merged$lon <- as.numeric(merged$lon)
merged$diabetes_percentage <- as.numeric(merged$diabetes_percentage)
merged$dia_PopulationCount <- as.numeric(merged$dia_PopulationCount)
merged$obesity_percentage <- as.numeric(merged$obesity_percentage)
merged$obe_PopulationCount <- as.numeric(merged$obe_PopulationCount)
str(merged)
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
mean(is.na(merged$diabetes_percentage))
mean(is.na(merged$obesity_percentage))
mean(is.na(merged$diabetes_percentage))
mean(is.na(merged$obesity_percentage))
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
merged[, .(
diabetes_min = min(diabetes_percentage, na.rm = T),
diabetes_max = max(diabetes_percentage, na.rm = T),
diabetes_length = length(diabetes_percentage),
obesity_min = min(obesity_percentage, na.rm = T),
obesity_max = max(obesity_percentage, na.rm = T),
obesity_length = length(obesity_percentage)
), by="cityname"]
dim(merged)
#head(merged)
#tail(merged)
str(merged)
table(merged$state)
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
summary(merged$diabetes_percentage)
summary(merged$dia_PopulationCount)
summary(merged$obesity_percentage)
summary(merged$obe_PopulationCount)
ggplot(merged, aes(x =obesity_percentage, y=diabetes_percentage, color = cityname)) +
geom_point(size=0.1, position="jitter", show.legend = FALSE) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged, aes(x =obesity_percentage, y=diabetes_percentage, color = cityname)) +
geom_point(size=0.1, position="jitter", show.legend = FALSE) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged[merged$state == "CA"], aes(x =obesity_percentage, y=diabetes_percentage, color=cityname)) +
geom_point(size=0.2, show.legend = FALSE) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged[merged$state == "CA"], aes(x =obesity_percentage, y=diabetes_percentage, color=cityname)) +
geom_point(size=0.2) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged, aes(x =obesity_percentage, y=diabetes_percentage, color=state)) +
geom_point(size=0.2) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged, aes(x =obesity_percentage, y=diabetes_percentage, color = state)) +
geom_point(size=0.1, position="jitter") +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged[state == "CA"], aes(x =obesity_percentage, y=diabetes_percentage, color=cityname)) +
geom_point(size=0.2, show.legend = FALSE) +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(data = merged[merged$cityname == "Los Angeles"|"San Diego"][!is.na(diabetes_percentage)], aes(diabetes_percentage, color=CityName, fill = CityName)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~ CityName)
table(merged$cityname)
ggplot(data = merged[merged$cityname == "Los Angeles" | "San Diego"][!is.na(diabetes_percentage)], aes(diabetes_percentage, color=CityName, fill = CityName)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~ CityName)
ggplot(data = merged[merged$cityname == "Los Angeles"][!is.na(diabetes_percentage)], aes(diabetes_percentage, color=CityName, fill = CityName)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~ CityName)
ggplot(data = merged[merged$cityname == "Los Angeles"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" || "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" || merged$cityname == "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" | "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" || "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" & "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles" && "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "San Diego"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
ggplot(data = merged[merged$cityname == "Los Angeles"], aes(diabetes_percentage, color=cityname, fill = cityname)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
merged[merged$CityName == "Los Angeles"] %>%
ggplot() +
stat_summary(mapping = aes(x = cityname, y = diabetes_percentage),
fun.min = min,
fun.max = max,
fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
merged[merged$CityName == "Los Angeles"] %>%
ggplot() +
stat_summary(mapping = aes(x = cityname, y = diabetes_percentage),
fun.min = min,
fun.max = max,
fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
merged[merged$cityname == "Los Angeles"] %>%
ggplot() +
stat_summary(mapping = aes(x = cityname, y = diabetes_percentage),
fun.min = min,
fun.max = max,
fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(merged[merged$cityname == "Los Angeles"][!is.na(diabetes_percentage)], aes(x=cityname, y=diabetes_percentage, color=cityname)) +
geom_boxplot()
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
pal <- colorNumeric(c('darkgreen','goldenrod','darkred'), domain=merged$diabetes_percentage)
pal
#label, color
leaflet() %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(data = merged[cityname == "Los Angeles"],
lat=~lat,lng=~lon,
label = ~paste0(round(diabetes_percentage,2)), color = ~ pal(diabetes_percentage),
opacity = 0.5, fillOpacity = 1, radius = 50) %>%
# And a pretty legend
addLegend('bottomleft', pal=pal, values=merged_$diabetes_percentage,
title='diabetes%', opacity=1)
#label, color
leaflet() %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(data = merged[cityname == "Los Angeles"],
lat=~lat,lng=~lon,
label = ~paste0(round(diabetes_percentage,2)), color = ~ pal(diabetes_percentage),
opacity = 0.5, fillOpacity = 1, radius = 50) %>%
# And a pretty legend
addLegend('bottomleft', pal=pal, values=merged$diabetes_percentage,
title='diabetes%', opacity=1)
str(merged[merged$state == "CA"])
table(merged$cityname[merged$state == "CA"])
merged[, region := fifelse(lon >= -98 & lat > 39.71, "NE",
fifelse(lon < -98 & lat > 39.71, "NW",
fifelse(lon < -98 & lat <= 39.71, "SW","SE")))
]
table(merged$region)
View(merged)
ggplot(data = merged[!is.na(diabetes_percentage)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~ region, nrow = 2)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_wrap(~ region, nrow = 2)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5, show.legend = FALSE) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
#facet_wrap(~ region, nrow = 2)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
View(dia)
merged[!is.na(diabetes_percentage)] %>%
ggplot() +
stat_summary(mapping = aes(x = region, y = diabetes_percentage),
fun.min = min,
fun.max = max,
fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
merged[!is.na(diabetes_percentage)][!is.na(region)] %>%
ggplot() +
stat_summary(mapping = aes(x = region, y = diabetes_percentage),
fun.min = min,
fun.max = max,
fun = median)
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(merged[!is.na(diabetes_percentage)], aes(x=region, y=diabetes_percentage, color=region)) +
geom_boxplot()
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(merged[!is.na(diabetes_percentage)][!is.na(region)], aes(x=region, y=diabetes_percentage, color=region)) +
geom_boxplot()
#  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(merged, aes(x =obesity_percentage, y=diabetes_percentage, color = region)) +
geom_point(size=0.1, position="jitter") +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
ggplot(merged[!is.na(region)], aes(x =obesity_percentage, y=diabetes_percentage, color = region)) +
geom_point(size=0.1, position="jitter") +
geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black")
length(merged$cityname)
merged[, region := fifelse(lon >= -98 & lat > 39.71, "NE",
fifelse(lon < -98 & lat > 39.71, "NW",
fifelse(lon < -98 & lat <= 39.71, "SW","SE")))
]
table(merged$region)
table(merged$region)[1]
table(merged$region)[1]+1
merged$diabetes_percentage[1]
merged[, dia_per_region_num := diabetes_percentage/length(merged$region),
by = .(region)]
head(merged)
merged[, dia_per_region_num := diabetes_percentage/length(merged$region),
by = .(region)]
head(merged$dia_per_region_num)
View(merged)
ggplot(data = merged[!is.na(dia_per_region_num)][!is.na(region)], aes(dia_per_region_num, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
merged[, dia_per_region_num := diabetes_percentage*dia_PopulationCount/length(merged$region),
by = .(region)]
head(merged$dia_per_region_num)
ggplot(data = merged[!is.na(dia_per_region_num)][!is.na(region)], aes(dia_per_region_num, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2")
#facet_wrap(~ region, nrow = 2)
merged[, dia_per_region_num := diabetes_percentage/length(merged$region),
by = .(region)]
head(merged$dia_per_region_num)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Paired") +
scale_fill_brewer(palette="Dark2")
#facet_wrap(~ region, nrow = 2)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Paired") +
scale_fill_brewer(palette="Paired")
#facet_wrap(~ region, nrow = 2)
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Paired") +
scale_fill_brewer()
ggplot(data = merged[!is.na(diabetes_percentage)][!is.na(region)], aes(diabetes_percentage, color=region, fill = region)) +
geom_histogram(fill="white", alpha=0.5) +
scale_color_brewer(palette="Set2") +
scale_fill_brewer()
#facet_wrap(~ region, nrow = 2)
dim(dia)
dim(obe)
dia <- as.data.table(dia)
obe <- as.data.table(obe)
dia_mini <- dia[, c(2, 3, 14, 17, 19, 20, 23)]
obe_mini <- obe[, c(2, 3, 14, 17, 19, 20, 23)]
colnames(dia_mini)[1] <- "diabetes_percentage"
colnames(dia_mini)[2] <- "dia_PopulationCount"
colnames(dia_mini)[3] <- "state"
colnames(dia_mini)[6] <- "lat"
colnames(dia_mini)[7] <- "lon"
colnames(obe_mini)[1] <- "obesity_percentage"
colnames(obe_mini)[2] <- "obe_PopulationCount"
colnames(obe_mini)[3] <- "state"
colnames(obe_mini)[6] <- "lat"
colnames(obe_mini)[7] <- "lon"
merged <-
merge(
# Data
x     = dia_mini,
y     = obe_mini,
# List of variables to match
by = c("state", "statedesc", "cityname", "lat", "lon"),
# keep everything!
all.x = TRUE
)
merged[, n := 1:.N, by = .(state, statedesc, cityname, lat, lon)]
merged <- merged[n == 1,][, n := NULL]
mean(is.na(merged$diabetes_percentage))
mean(is.na(merged$obesity_percentage))
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
merged$lat <- as.numeric(merged$lat)
merged$lon <- as.numeric(merged$lon)
merged$diabetes_percentage <- as.numeric(merged$diabetes_percentage)
merged$dia_PopulationCount <- as.numeric(merged$dia_PopulationCount)
merged$obesity_percentage <- as.numeric(merged$obesity_percentage)
merged$obe_PopulationCount <- as.numeric(merged$obe_PopulationCount)
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
merged[, diabetes_percentage := fcoalesce(diabetes_percentage, mean(diabetes_percentage, na.rm = TRUE))]
merged[, obesity_percentage := fcoalesce(obesity_percentage, mean(obesity_percentage, na.rm = TRUE))]
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
summary(merged$diabetes_percentage)
summary(merged$obesity_percentage)
pal <- colorNumeric(c('darkgreen','goldenrod','darkred'), domain=merged$diabetes_percentage)
pal
#label, color
leaflet() %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(data = merged[cityname == "Los Angeles"],
lat=~lat,lng=~lon,
label = ~paste0(round(diabetes_percentage,2)), color = ~ pal(diabetes_percentage),
opacity = 0.5, fillOpacity = 1, radius = 50) %>%
# And a pretty legend
addLegend('bottomleft', pal=pal, values=merged$diabetes_percentage,
title='diabetes%', opacity=1)
#dim(merged)
head(merged)
#tail(merged)
#dim(merged)
#head(merged)
tail(merged)
dim(merged)
