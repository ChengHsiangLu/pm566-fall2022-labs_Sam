---
title: "assignment02"
author: "sl"
date: "`r Sys.Date()`"
output: github_document
always_allow_html: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(lubridate)
library(tidyverse)
library(leaflet)
library(data.table)
library(dtplyr)
library(dplyr)
library(ggplot2)
```

```{r}
setwd("/Users/samuellu/Desktop/PM566/GitHub/pm566-fall2022-labs_Sam/Assignment/assignment02/")
```

## Read in the data 
```{r read-data, cashe=TRUE}
if (!file.exists("chs_individual.csv"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/01_chs/chs_individual.csv",
    destfile = "chs_individual.csv",
    method   = "libcurl",
    timeout  = 60
    )
ind <- fread("chs_individual.csv")

if (!file.exists("chs_regional.csv"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/01_chs/chs_regional.csv",
    destfile = "chs_regional.csv",
    method   = "libcurl",
    timeout  = 60
    )
reg <- fread("chs_regional.csv")
```

```{r}
dim(ind)
dim(reg)
```

## Merge data
```{r merge-datatables}
merged <- 
  merge(
  # Data
  x     = ind,      
  y     = reg, 
  # List of variables to match
  by  = "townname",
  # keep everything!
  all.x = TRUE,      
  all.y = TRUE
  ) 
```

## Step1: After merging the data, make sure you don’t have any duplicates by counting the number of rows. Make sure it matches.
```{r}
dim(merged)
```

After merging the data, there are still 1200 rows. Therefore, there is no duplicates.

### In the case of missing values, impute data using the average within the variables “male” and “hispanic.”
```{r}
summary(merged$bmi)
summary(merged$fev)
```

There are 89 NAs in the column of bmi and 95 NAs in the column of fev.

```{r}
mean(is.na(merged$bmi))
```
```{r}
mean(is.na(merged$fev))
```

However,only 7.4% and 7.9% of the data is missing.

```{r}
merged[, bmi := fcoalesce(bmi, mean(bmi, na.rm = TRUE)), 
       by = .(male, hispanic)]
merged[, fev := fcoalesce(fev, mean(fev, na.rm = TRUE)), 
       by = .(male, hispanic)]
```

```{r}
summary(merged$bmi)
summary(merged$fev)
```

I imputed the data using the average within the variables “male” and “hispanic.”

## Step2: Create a new categorical variable named “obesity_level” using the BMI measurement (underweight BMI<14; normal BMI 14-22; overweight BMI 22-24; obese BMI>24). To make sure the variable is rightly coded, create a summary table that contains the minimum BMI, maximum BMI, and the total number of observations per category.

```{r}
merged[, obesity_level := fifelse(bmi < 14, "underweight",
                fifelse(bmi >= 14 & bmi < 22, "normal",
                fifelse(bmi >= 22 & bmi <=24, "overweight","obese")))
   ]
summary(merged$bmi)
```

```{r}
table(merged$obesity_level)
```

```{r}
merged[!is.na(merged$obesity_level)][, .(
  bmi_min = min(bmi, na.rm = T),
  bmi_max = max(bmi, na.rm = T), 
  bmi_length = length(bmi)
), by="obesity_level"]
```

## Step3: Create another categorical variable named “smoke_gas_exposure” that summarizes “Second Hand Smoke” and “Gas Stove.” The variable should have four categories in total.

```{r}
merged[, smoke_gas_exposure := fifelse(smoke == 1 & gasstove == 1, "smoke_gas",
                fifelse(smoke == 0 & gasstove == 1, "gas",
                fifelse(smoke == 1 & gasstove == 0, "smoke",
                fifelse(smoke == 0 & gasstove == 0, "none","NA"))))
   ]
table(merged$smoke_gas_exposure)
```

```{r}
nrow(merged[is.na(merged$smoke_gas_exposure)])
```

There are 60 NAs with the smoke_gas_exposure column.

## Step4: Create four summary tables showing the average (or proportion, if binary) and sd of “Forced expiratory volume in 1 second (ml)” and asthma indicator by town, sex, obesity level, and “smoke_gas_exposure.”

```{r townname}
merged[, .(
    fev_avg      = mean(fev, na.rm=TRUE),
    fev_sd      = sd(fev, na.rm=TRUE),
    asthma_avg      = mean(asthma, na.rm=TRUE),
    asthma_sd      = sd(asthma, na.rm=TRUE)
    ),
    by = townname
    ][order(townname)]
```

```{r male}
merged[, .(
    fev_avg      = mean(fev, na.rm=TRUE),
    fev_sd      = sd(fev, na.rm=TRUE),
    asthma_avg      = mean(asthma, na.rm=TRUE),
    asthma_sd      = sd(asthma, na.rm=TRUE)
    ),
    by = male
    ][order(male)]
```

```{r obesity_level}
merged[, .(
    fev_avg      = mean(fev, na.rm=TRUE),
    fev_sd      = sd(fev, na.rm=TRUE),
    asthma_avg      = mean(asthma, na.rm=TRUE),
    asthma_sd      = sd(asthma, na.rm=TRUE)
    ),
    by = obesity_level
    ][order(obesity_level)]
```

```{r smoke_gas_exposure}
merged[, .(
    fev_avg      = mean(fev, na.rm=TRUE),
    fev_sd      = sd(fev, na.rm=TRUE),
    asthma_avg      = mean(asthma, na.rm=TRUE),
    asthma_sd      = sd(asthma, na.rm=TRUE)
    ),
    by = smoke_gas_exposure
    ][order(smoke_gas_exposure)]
```

## Looking at the Data (EDA)
### Check the dimensions and headers and footers of the data
```{r}
dim(merged)
head(merged)
tail(merged)
```

### Check the variable types in the data
```{r}
str(merged)
```

### Check for any data issues, particularly in the key variable we are analyzing
```{r}
#table(merged$male)
#table(merged$hispanic)
#table(merged$asthma)
#table(merged$smoke)
#table(merged$gasstove)
#table(merged$obesity_level)
table(merged$smoke_gas_exposure)
```

```{r}
#summary(merged$bmi)
summary(merged$fev)
#summary(merged$pm25_mass)
```

1. Facet plot showing scatterplots with regression lines of BMI vs FEV by “townname”.
```{r scatterplots}
ggplot(merged, aes(x=bmi, y=fev, color=townname)) + 
  geom_point(size=0.2) +
  geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "black") +
  facet_wrap(~townname)
```

2. Stacked histograms of FEV by BMI category and FEV by smoke/gas exposure. Use different color schemes than the ggplot default.
```{r}
merged$smoke_gas_exposure <- factor(merged$smoke_gas_exposure, levels=c("none", "smoke", "gas", "smoke_gas"))

merged$obesity_level <- factor(merged$obesity_level, levels=c("underweight", "normal", "overweight", "obese"))
```

```{r his_fev_BMI}
ggplot(data = merged[!is.na(obesity_level)], aes(fev, color=obesity_level, fill = obesity_level)) + 
  geom_histogram(fill="white", alpha=0.5) +
  scale_color_brewer(palette="Dark2") +
  scale_fill_brewer(palette="Dark2") +
  facet_wrap(~ obesity_level, nrow = 2)
```

```{r his_FEV_smoke_gas}
ggplot(data = merged[!is.na(smoke_gas_exposure)], aes(fev, color=smoke_gas_exposure, fill = smoke_gas_exposure)) + 
  geom_histogram(fill="white", alpha=0.5, position="identity") +
  scale_color_brewer(palette="Dark2") +
  scale_fill_brewer(palette="Dark2") +
  theme(legend.position="top") +
  facet_wrap(~ smoke_gas_exposure, nrow = 2)
```

3. Barchart of BMI by smoke/gas exposure.

```{r bar_bmi_smoke_gas}
ggplot(data = merged[!is.na(obesity_level)][!is.na(smoke_gas_exposure)]) + 
  geom_bar(mapping = aes(x = smoke_gas_exposure, fill = obesity_level), show.legend = T, width = 1,
           alpha=0.8, position="identity") + 
  theme(aspect.ratio = 1) +
  labs(x = NULL, y = NULL)
```

4. Statistical summary graphs of FEV by BMI and FEV by smoke/gas exposure category.

```{r}
merged[!is.na(merged$obesity_level)] %>%
  ggplot() + 
    stat_summary(mapping = aes(x = obesity_level, y = fev),
    fun.min = min,
    fun.max = max,
    fun = median)
```

```{r box_fev_bmi}
ggplot(merged[!is.na(merged$obesity_level)], aes(x=obesity_level, y=fev, color=obesity_level)) +
  geom_boxplot()
```

By checking the median of fev, the category of underweight is slightly lower than other groups.

```{r box_fev_smoke_gas}
ggplot(merged[!is.na(merged$smoke_gas_exposure)], aes(x=smoke_gas_exposure, y=fev, color=smoke_gas_exposure)) +
  geom_boxplot()
```

5. A leaflet map showing the concentrations of PM2.5 mass in each of the CHS communities.
```{r}
pal <- colorNumeric(c('darkgreen','goldenrod','darkred'), domain=reg$pm25_mass)
pal
```

```{r}
#label, color
leaflet() %>%
  addProviderTiles('OpenStreetMap') %>% 
  addCircles(data = reg,
             lat=~lat,lng=~lon,
             label = ~paste0(round(pm25_mass,2)), color = ~ pal(pm25_mass),
             opacity = 1, fillOpacity = 1, radius = 500) %>%
  # And a pretty legend
  addLegend('bottomleft', pal=pal, values=reg$pm25_mass,
             title='pm25_mass', opacity=1)
```

6. Choose a visualization to examine whether PM2.5 mass is associated with FEV.
```{r scatter_pm25_fev}
ggplot(merged, aes(x = pm25_mass, y=fev, color = pm25_mass)) + 
  geom_point(size=0.1, position="jitter") +
  geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "red")
```

```{r}
ggplot(merged[!is.na(merged$obesity_level)], aes(x = pm25_mass, y=fev, color = pm25_mass)) + 
  geom_point(size=0.1, position="jitter") +
  geom_smooth(size=0.2, method=lm, se=FALSE, fullrange=TRUE, color = "red") +
  facet_wrap(~ obesity_level, nrow = 2)
```

## Questions

### 1. What is the association between BMI and FEV (forced expiratory volume)? 

In the scatterplots, there is a positive correlation between BMI and FEV in differnt towns. People with higher BMI tend to have higher fev.

### 2. What is the association between smoke and gas exposure and FEV? 

In the boxplot of smoke_gas_exposure and FEV, we can see that people in smoke_gas category have a slightly lower median than other categories.

### 3. What is the association between PM2.5 exposure and FEV?

In the scatterplot of PM2.5 and FEV, we cannot see any correlation between them. Even if we check with different categories of obseity_level, there isn't any correlation between them.
